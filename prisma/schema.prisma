// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  name             String
  userName         String
  password         Password?
  email            Email?
  admin            Admin[]
  company          Company?  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  companyId        String?
  companiesCreated Company[] @relation("CompanyCreatedBy")
}

model Password {
  id        String    @id @default(uuid())
  hash      String
  salt      String
  setAt     DateTime  @default(now())
  updatedAt DateTime?
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String    @unique

  @@map("Passwords")
}

model Email {
  id           String    @id @default(uuid())
  emailAddress String    @unique
  updatedAt    DateTime?
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String    @unique
}

model Admin {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  companies Company[]
}

model Company {
  id        String  @id @default(uuid())
  name      String
  location  String?
  creator   User    @relation("CompanyCreatedBy", fields: [creatorId], references: [id])
  creatorId String
  batches   Batch[]
  users     User[]
  admin     Admin   @relation(fields: [adminId], references: [id], onDelete: Cascade)

  adminId String
}

model Batch {
  id              String     @id @default(uuid())
  name            String
  date            DateTime   @default(now())
  batchNumber     Int
  company         Company    @relation(fields: [companyId], references: [id])
  companyId       String
  categories      Category[]
  totalInvestment Int?
}

model Category {
  id          String    @id @default(uuid())
  name        String
  refNo       String?
  dateAdded   DateTime  @default(now())
  description String?
  products    Product[]
  batch       Batch     @relation(fields: [batchId], references: [id])
  batchId     String

  @@map("categories")
}

model Product {
  id           String      @id @default(uuid())
  name         String
  refNo        String?
  category     Category    @relation(fields: [categoryId], references: [id])
  categoryId   String
  dateAdded    DateTime    @default(now())
  quantity     Int
  unitPrice    Int
  sellingPrice Int?
  description  String?
  salesItems   SalesItem[]
  expDate      DateTime?
  manDate      DateTime?

  @@map("products")
}

model Sales {
  id           String      @id @default(uuid())
  items        SalesItem[]
  date         DateTime    @default(now())
  customerName String?     @default("N/A")
  refNo        String?
  totalAmount  Int?
}

model SalesItem {
  id         String  @id @default(uuid())
  product    Product @relation(fields: [productId], references: [id])
  productId  String
  quantity   Int
  unitPrice  Int
  totalPrice Int?
  sales      Sales?  @relation(fields: [salesId], references: [id])
  salesId    String?
}
